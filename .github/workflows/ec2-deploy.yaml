name: "Deploy student tracker application to EC2"
on: 
  push:
    branches: ["main"]
 
jobs:
  build:
    name: build tracker app
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip --version
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt


      - name: Add vault credentials
        run: |
          # export VAULT_ADDR=${{ secrets.VAULT_ADDR }}
          #export VAULT_ROLE_ID=${{ secrets.VAULT_ROLE_ID }}
          #export VAULT_SECRET_ID=${{ secrets.VAULT_SECRET_ID }}
          echo "VAULT_ADDR=${{ secrets.VAULT_ADDR }}" >> $GITHUB_ENV
          echo "VAULT_ROLE_ID=${{ secrets.VAULT_ROLE_ID }}" >> $GITHUB_ENV
          echo "VAULT_SECRET_ID=${{ secrets.VAULT_SECRET_ID }}" >> $GITHUB_ENV


  deploy:
    name: deploy app to EC2 instance
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << "EOF"
          cd /home/ubuntu/

          # Kill any process using port 8080
          if lsof -i :8080 -t >/dev/null; then
            echo "Port 8080 in use, killing process..."
            kill -9 \$(lsof -i :8080 -t)
          fi

          # Clone only if not already cloned
          if [ ! -d "student-tracker-devops-project" ]; then
            git clone https://github.com/keneojiteli/student-tracker-devops-project.git
          fi

          cd student-tracker-devops-project

          sudo apt update
          sudo apt install -y python3 python3-pip python3-venv
          python3 -m pip install --upgrade pip
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

          export VAULT_ADDR="${{ secrets.VAULT_ADDR }}"
          export VAULT_ROLE_ID="${{ secrets.VAULT_ROLE_ID }}"
          export VAULT_SECRET_ID="${{ secrets.VAULT_SECRET_ID }}"

          nohup uvicorn app.main:app --host 0.0.0.0 --port 8080 > output.log 2>&1 &

          exit 0
          EOF

