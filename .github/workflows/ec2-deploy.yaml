name: Deploy app to EC2

on:
  push:
    branches: [ main ]          # deploy every push to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:                        # reuse across commands
      APP_DIR: /home/ubuntu/student-tracker-devops-project
      REPO_URL: https://github.com/keneojiteli/student-tracker-devops-project.git
      APP_PORT: 8080            # change if you prefer another port

    steps:
    
    # prepare an SSH key so the runner can log in to EC2
    - name: Add EC2 host to known_hosts and set key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    
    # deploy / update the app on the instance
    
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/ubuntu/
          git clone https://github.com/keneojiteli/student-tracker-devops-project.git
          cd student-tracker-devops-project
          ls
          set -e                                   # bail on first error
          sudo apt update -y
          sudo apt install -y python3 python3-venv python3-pip

          # Clone once or just pull if the repo already exists
          #if [ -d "${APP_DIR}/.git" ]; then
             #echo "Repo exists – pulling latest changes"
            # cd ${APP_DIR}
           #  git pull --ff-only
          #else
             #echo "Cloning repository first time"
            # git clone ${REPO_URL} ${APP_DIR}
           #  cd ${APP_DIR}
          #fi

          # Virtual-env rebuild / update
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

          # Export Vault secrets for the running shell / process
          export VAULT_ADDR='${{ secrets.VAULT_ADDR }}'
          export VAULT_ROLE_ID='${{ secrets.VAULT_ROLE_ID }}'
          export VAULT_SECRET_ID='${{ secrets.VAULT_SECRET_ID }}'

          # Kill anything that’s already listening on APP_PORT
          if sudo lsof -i :${APP_PORT} -sTCP:LISTEN -t >/dev/null 2>&1; then
            echo "Killing process on port ${APP_PORT}"
            sudo fuser -k ${APP_PORT}/tcp
          fi

          # Start FastAPI via uvicorn (background, log to file)
          nohup venv/bin/uvicorn app.main:app \
                --host 0.0.0.0 --port ${APP_PORT} \
                > /home/ubuntu/uvicorn.log 2>&1 &

          echo "Deployment finished."
          exit 0                                
        EOF
